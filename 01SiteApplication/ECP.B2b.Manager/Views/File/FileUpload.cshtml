@model ECP.Util.HtmlHelper.FileUploadFilterEntity;
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>文件上传</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link href="~/Scripts/layer/css/layui.css" rel="stylesheet"  media="all" />
    <link href="~/Scripts/ladda/dist/ladda-themeless.css" rel="stylesheet" />
</head>
<body>

    <blockquote class="layui-elem-quote">
        当前选择模式条件：允许上传文件类型（@Model.fileAccept），允许上传文件后缀（@if (string.IsNullOrEmpty(Model.exts))
        {<text>全部</text> }
else
{<text>@Model.exts</text> }），限制文件大小（ @if (Model.size == 0)
        { <text>无限制</text> }
        else
        {<text>@Model.size</text> } kb），是否可多选（@if (Model.multiple)
        { <text>是</text> }
        else
        {<text>否</text>}）
    </blockquote>



    @*<fieldset class="layui-elem-field layui-field-title" style="margin-top: 30px;">
        <legend></legend>
    </fieldset>*@

    <div class="layui-upload" style="text-align:center;">
        <div class="layui-upload-drag" id="btnSelectList" style="text-align:center;width:95%;padding:30px 0px">
            <i class="layui-icon"></i>
            <p>点击选择文件，或将文件拖拽到此处</p>
        </div>

        <div class="layui-upload-list"  style="text-align:left;">
            <table class="layui-table">
                <thead>
                    <tr>
                        <th>文件名</th>
                        <th>大小</th>
                        <th>状态</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody id="fileShowList"></tbody>
            </table>
        </div>
        <div style="text-align:center">
            <button type="button"   data-style="expand-left" class="layui-btn ladda-button" id="btnUploadList"><span class="ladda-label"><i class="layui-icon"></i>开始上传</span></button>
        </div>
    </div>
    
    <script src="~/Scripts/layer/layui.js"  charset="utf-8"></script>
    <script src="~/Scripts/ladda/dist/spin.min.js" charset="utf-8"></script>
    <script src="~/Scripts/ladda/dist/ladda.min.js" charset="utf-8"></script>  

    <style>
        .ladda-button .ladda-spinner
        {
            margin-top:0px;
        }
        .ladda-button[data-style="expand-left"] .ladda-spinner
        {
            left:20px;
        }
    </style>

    <script>


    //images（图片）、file（所有文件）、video（视频）、audio（音频）
    //accept: 'file' //普通文件
    //accept: 'video' //视频
    //accept: 'audio' //音频
    //exts: 'zip|rar|7z' //允许上传文件后缀   只允许上传压缩文件
    //size: 60 //限制文件大小，单位 KB
    //data  请求上传接口的额外参数
    //multiple: true   //是否多选




    //method 	上传接口的 HTTP 类型
    //auto: false     //选择完成后是否自动上传
    //bindAction: '#test9'   //指向一个按钮触发上传，一般配合 auto: false 来使用
    //drag 	是否接受拖拽的文件上传，设置 false 可禁用
    //choose 	选择文件后的回调函数。返回一个object参数
    //before 	文件提交上传前的回调。返回一个object参数
    //done 	执行上传请求后的回调。返回三个参数，分别为：res（服务端响应信息）、index（当前文件的索引）、upload（重新上传的方法，一般在文件上传失败后使用）
    //error 	执行上传请求出现异常的回调（一般为网络异常、URL 404等）。返回两个参数，分别为：index（当前文件的索引）、upload（重新上传的方法）

        var files;
        layui.use('upload', function () {
            var $ = layui.jquery, upload = layui.upload;
            //结果回调参数
            var successCallbackParams =
                {
                    filePaths: []
                };

            var fileListView = $('#fileShowList')
                , uploadListIns = upload.render({
                    elem: '#btnSelectList'
                    , url: '/file/upload'
                    , accept: '@Model.fileAccept.ToString()'
                    , data: { UploadPath: '@Model.uploadPath' }
                    @if (!string.IsNullOrEmpty(Model.exts)) { <text>, exts: '@Model.exts'</text> }
                    @if (!Model.multiple) {  <text> , size:@Model.size</text>}
                    , multiple: @Model.multiple.ToString().ToLower()   //是否多选
                    , auto: false
                    , bindAction: '#btnUploadList'
                    , choose: function (obj) {

                         //单选
                        if (!this.multiple)
                        {
                            for (var index in files) {
                                delete files[index];
                            }
                            successCallbackParams.filePaths = []; //清空回调
                            fileListView.html("");
                        }


                        files = obj.pushFile(); //将每次选择的文件追加到文件队列
                        //读取本地文件
                        obj.preview(function (index, file, result) {

                            var tr = $(['<tr id="upload-' + index + '">'
                                , '<td><span style="cursor:pointer" >' + file.name + '</span></td>'
                                , '<td>' + (file.size / 1014).toFixed(1) + 'kb</td>'
                                , '<td>等待上传</td>'
                                , '<td>'
                                , '<button class="layui-btn layui-btn-mini demo-reload layui-hide">重传</button>'
                                , '<button class="layui-btn layui-btn-mini layui-btn-danger demo-delete">删除</button>'
                                , '</td>'
                                , '</tr>'].join(''));

                            (function (result, tr) {
                                var tipsIndex;
                                $(tr.find("span")).mouseover(function () {
                                    tipsIndex = layer.tips('<img src="' + result + '" width="100" height="100"  class="layui-upload-img">', $(this));
                                }).mouseout(function () {
                                    layer.close(tipsIndex);
                                }).click(function () {
                                    window.open(result, 'target', '');
                                });
                            })(result, tr);


                            //单个重传
                            tr.find('.demo-reload').on('click', function () {
                                obj.upload(index, file);
                                $('#btnUploadList').click();
                                $(this).parent().find("button").addClass("layui-hide");
                            });

                            //删除
                            tr.find('.demo-delete').on('click', function () {
                                delete files[index]; //删除对应的文件
                                tr.remove();
                            });

                            fileListView.append(tr);
                        });
                    }
                    , before: function (obj) {
                        $("#fileShowList").find("button").addClass("layui-hide");
                    }
                    , done: function (res, index, upload) {
                        successUploadCount++;
                        if (res.code == 1) { //上传成功
                            var tr = fileListView.find('tr#upload-' + index)
                                , tds = tr.children();
                            tds.eq(2).html('<span style="color: #5FB878;">上传成功</span>');
                            tds.eq(3).html(''); //清空操作
                            delete files[index]; //删除文件队列已经上传成功的文件
                            //将成功结果压入到数组对象中，用于回调参数
                            successCallbackParams.filePaths.push(res.uploadPath);
                            if (isAllSuccess()) {
                                @if (!string.IsNullOrEmpty(Model.onSuccessCallback)) {
                                    <text>
                                if (typeof window.parent.@Model.onSuccessCallback ==='function') {
                                    window.parent.@Model.onSuccessCallback (successCallbackParams);
                                }
                                    </text>
                                }
                            }

                            return;
                        }
                        this.error(index, upload);
                    }
                    , error: function (index, upload) {
                        errorUploadCount++;
                        var tr = fileListView.find('tr#upload-' + index)
                            , tds = tr.children();
                        tds.eq(2).html('<span style="color: #FF5722;">上传失败</span>');
                        tds.eq(3).find('button').removeClass('layui-hide'); //显示重传
                    }
                });
        });


        var successUploadCount = 0;
        var errorUploadCount = 0;

        /*判断是否全部上传成功 */
        function isAllSuccess()
        {
            return getJsonLength(files) == 0 && errorUploadCount == 0;
         }


        Ladda.bind('#btnUploadList', {
            callback: function (instance) {

                if (files == undefined || getJsonLength(files) == 0) {
                    instance.setProgress(1);
                    instance.stop();
                }
                else {
                    var progress = 0;
                    var fileCount = getJsonLength(files);
                    var singProgress = 1 / fileCount;

                    var interval = setInterval(function () {
                        if (fileCount == 1) {
                            if (successUploadCount + errorUploadCount == 0)
                            {
                                progress = Math.min(progress + 0.01, 1);
                                //不需要跳动的话就把 0.98 和  0.95 设置为一致即可
                                if (progress >= 0.98)
                                {
                                    progress = 0.95;
                                }
                            }
                            else {
                                progress = 1;
                            }
                        }
                        else {
                            progress = Math.min(singProgress * (successUploadCount + errorUploadCount), 1);
                        }
                        instance.setProgress(progress);

                        if (progress >= 1) {
                            instance.stop();
                            clearInterval(interval);
                            successUploadCount = 0;
                            errorUploadCount = 0;
                        }
                    }, 200);
                }
            }
        });


        function getJsonLength(jsonObj) {
            var jsonLength = 0;
            for (var i in jsonObj) {
                jsonLength++;
            }
            return jsonLength;
        }
    </script>

</body>
</html>